# To build AppImageBuilder, specify explicit AppDir path other than current directory
# e.g.
# cd recipes/appimage-builder
# APPIMAGE_BUILDER_VERSION=eaadff4 python ../../__main__.py --recipe AppImageBuilder.yml --appdir /tmp/appimage-builder
version: 1
script:
  # Remove any previous build
  - rm -rf $TARGET_APPDIR  || true
  - mkdir -p $TARGET_APPDIR/usr/share/icons/hicolor/scalable/apps $TARGET_APPDIR/usr/bin $TARGET_APPDIR/opt "$BUILD_DIR"
  - cp ../../resources/appimage-builder.svg $TARGET_APPDIR/usr/share/icons/hicolor/scalable/apps
  - cp ../../resources/application-vnd.appimage.svg $TARGET_APPDIR/usr/share/icons/hicolor/scalable/apps

AppDir:
  app_info:
    id: org.appimage-crafters.appimage-builder
    name: appimage-builder
    icon: appimage-builder
    version: 'latest'
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/local/bin/appimage-builder $@"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse'
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x871920D1991BC93C'

    include:
      - bash
      - coreutils
      - binutils
      - util-linux
      - file
      - desktop-file-utils
      - fakeroot
      - libgdk-pixbuf2.0-dev
      - patchelf
      - python3.10
      - squashfs-tools
      - strace
      - zsync
    exclude: []

  after_bundle: |
    # configure tools 
    ln -s fakeroot-sysv $TARGET_APPDIR/usr/bin/fakeroot
    ln -s bash $TARGET_APPDIR/bin/sh

    # install appimage-builder
    python3.10 -m pip install --ignore-installed --prefix=/usr --root="$TARGET_APPDIR"  install ../../
    python3.10 -m pip install --ignore-installed --prefix=/usr --root="$TARGET_APPDIR"  install certifi

  runtime:
    version: "v2.0.0"
    env:
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/lib/python3.10/site-packages'
      # SSL Certificates are placed in a different location for every system therefore we ship our own copy
      SSL_CERT_FILE: '${APPDIR}/usr/lib/python3.10/site-packages/certifi/cacert.pem'

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun --help
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun --help
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun --help
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun --help
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun --help

AppImage:
  file_name: "appimage-builder-{{APPIMAGE_BUILDER_VERSION}}-x86_64.AppImage"
  update-information: 'gh-releases-zsync|AppImageCrafters|appimage-builder|latest|-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64
  comp: gzip
